# Generated by Django 5.1.7 on 2025-03-27 12:31

from django.db import migrations, connection, OperationalError

def update_jti_column(apps, schema_editor):
    try:
        with connection.cursor() as cursor:
            cursor.execute("""
                SELECT DATA_TYPE, CHARACTER_MAXIMUM_LENGTH
                FROM INFORMATION_SCHEMA.COLUMNS
                WHERE TABLE_SCHEMA = DATABASE()
                  AND TABLE_NAME = 'oauth2_provider_idtoken'
                  AND COLUMN_NAME = 'jti'
            """)
            result = cursor.fetchone()
            if result:
                data_type, max_length = result
                if data_type.lower() == "char" and max_length == 32:
                    cursor.execute("ALTER TABLE oauth2_provider_idtoken MODIFY COLUMN jti CHAR(36) NOT NULL;")
    except OperationalError as e:
        raise RuntimeError(
            "Unable to check column type or length in INFORMATION_SCHEMA. "
            "Make sure the database user has access to metadata tables."
        ) from e


def revert_jti_column(apps, schema_editor):
    try:
        with connection.cursor() as cursor:
            cursor.execute("""
                SELECT DATA_TYPE, CHARACTER_MAXIMUM_LENGTH
                FROM INFORMATION_SCHEMA.COLUMNS
                WHERE TABLE_SCHEMA = DATABASE()
                  AND TABLE_NAME = 'oauth2_provider_idtoken'
                  AND COLUMN_NAME = 'jti'
            """)
            result = cursor.fetchone()
            if result:
                data_type, max_length = result
                if data_type.lower() == "char" and max_length == 36:
                    cursor.execute("ALTER TABLE oauth2_provider_idtoken MODIFY COLUMN jti CHAR(32) NOT NULL;")
    except OperationalError as e:
        raise RuntimeError(
            "Unable to check column type or length in INFORMATION_SCHEMA. "
            "Make sure the database user has access to metadata tables."
        ) from e

class Migration(migrations.Migration):
    """
    Update the length of the `jti` column in the `oauth2_provider_idtoken` table
    from CHAR(32) to CHAR(36).

    In Django versions < 5.0, UUIDFields were stored as 32-character hex strings.
    Starting from Django 5.0, UUIDFields are stored as 36-character dashed strings
    (the canonical string representation of UUIDs).

    The `jti` field in django-oauth-toolkit uses a UUIDField and now requires a
    longer column to avoid DataError exceptions when saving tokens.

    See also:
    https://docs.djangoproject.com/en/5.1/releases/5.0/#migrating-uuidfield
    https://www.albertyw.com/note/django-5-mariadb-uuidfield
    """

    dependencies = [
        ("api", "0007_deviceaccesslogentry_method"),
        ("oauth2_provider", "0012_add_token_checksum"),
    ]

    operations = [
        migrations.RunPython(update_jti_column, revert_jti_column)
    ]
