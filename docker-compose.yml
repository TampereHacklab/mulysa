version: '3'

services:
  db:
    image: mariadb:10.4
    container_name: db
    restart: always
    env_file:
      - mulysa-environment.env
    volumes:
      - "./data/db:/var/lib/mysql:z"

  nginx:
    build: ./nginx
    restart: always
    container_name: nginx
    volumes:
      - static_files:/code/static/
    depends_on:
      - mulysa
    labels:
      - "traefik.enable=true"
      # our service is named mulysa and it is on port 8000
      - "traefik.http.services.nginxmulysa.loadbalancer.server.port=80"
      # router listens only on this host
      - "traefik.http.routers.nginxmulysa.rule=Host(`my.tampere.hacklab.fi`)"
      # listen on websecure entrypoint
      - "traefik.http.routers.nginxmulysa.entrypoints=websecure"
      # use le for tls
      - "traefik.http.routers.nginxmulysa.tls.certresolver=myhttpchallenge"

      # defined middleware for redirects
      - "traefik.http.middlewares.nginxmulysa-redirect-web-secure.redirectscheme.scheme=https"
      # listen on web also and use the middlware to do the redirect
      - "traefik.http.routers.nginxmulysa-redir.rule=host(`my.tampere.hacklab.fi`)"
      - "traefik.http.routers.nginxmulysa-redir.entrypoints=web"
      - "traefik.http.routers.nginxmulysa-redir.middlewares=nginxmulysa-redirect-web-secure"

  mulysa:
    build: .
    restart: always
    container_name: mulysa
    env_file:
      - mulysa-environment.env
    depends_on:
      - db
    volumes:
      - static_files:/code/static/

  proxy:
    image: "traefik:v2.0.0-rc3"
    restart: always
    container_name: proxy
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # two entrypoints, web and websecure
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # define lets encrypt tls resolver
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myhttpchallenge.acme.email=postmaster@tampere.hacklab.fi"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./data/letsencrypt:/letsencrypt:z"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    depends_on:
      - mulysa
      - nginx

volumes:
  static_files: